*,
*::after,
*::before {
  box-sizing: border-box;
}
:root {
  --cell-size: 200px;
  --mark-size: calc(var(--cell-size) * 0.9);
}

body {
  margin: 0;
  font-family: Arial, Helvetica, sans-serif;
  background-image: linear-gradient(white, purple);
}
#title {
  color: rgba(70,11,99,0.6);
  text-align: center;
  font-family:'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
  font-weight: 900;
  font-size: 4em;
}
hr {
  width: 500px;
  height: 5px;
  background-image: linear-gradient(white, purple)
}
.board {
  width: 100vw;
  height: 100vh;
  display: grid;
  justify-content: center;
  align-content: center;
  justify-items: center;
  align-items: center;
  grid-template-columns: repeat(3, auto);
  padding-bottom: 120px;
}

.cell {
  width: var(--cell-size);
  height: var(--cell-size);
  border: 3px solid whitesmoke;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  cursor: pointer;
}
.cell:first-child,
.cell:nth-child(2),
.cell:nth-child(3) {
  border-top: none;
}
.cell:nth-child(3n + 1) {
  border-left: none;
}

.cell:nth-child(3n + 3) {
  border-right: none;
}

.cell:last-child,
.cell:nth-child(8),
.cell:nth-child(7) {
  border-bottom: none;
}
/*cursor not allowed with cell is alread full */
.cell.x,
.cell.circle {
  cursor: not-allowed;
}
.cell.x::before,
.cell.x::after,
.cell.circle::before{
  background-color: black;
}



.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after,
.board.circle .cell:not(.x):not(.circle):hover::before,
.board.circle .cell:not(.x):not(.circle):hover::after{
  background-color: lightgray;
}


/*hover for x turns */
/* Create x */
.cell.x::before,
.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after {
  content: " ";
  position: absolute;
  width: calc(var(--mark-size) * 0.15);
  height: var(--mark-size);
 
}

.cell.x::before,
.board.x .cell:not(.x):not(.circle):hover::before{
  transform: rotate(45deg);
}

.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::after{
  transform: rotate(-45deg);
}

/* Create circle */

.cell.circle::before,
.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::before,
.board.circle .cell:not(.x):not(.circle):hover::after {
  content: " ";
  position: absolute;
  width: var(--mark-size);
  height: var(--mark-size);
  border-radius: 50%;
 
 
}


.cell.circle::before,
.board.circle .cell:not(.x):not(.circle):hover::before {
  width: var(--mark-size);
  height: var(--mark-size);


}

.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::after  {
  width: calc(var(--mark-size) * .7);
  height: calc(var(--mark-size) * .7);
  background-color: white;
 
}

.winning-message {
display: none;
font-family: Arial, Helvetica, sans-serif;
 position: fixed;
 top: 0;
 left: 0;
 right: 0;
 bottom: 0;
 background-color: rgba(70,11,99,0.8);

 justify-content: center;
 align-items: center;
 color: white;
 font-size: 5rem;
 flex-direction: column;

}
.winning-message button{
  background-color: rgba(70,11,99,0.6);
  color: aliceblue;
  font-size: 2rem;
  border: 1px solid black;
  padding: .25em .5em;
  cursor: pointer;
}
.winning-message button:hover{
  background-color: white;
  color:black;
  border-color: white;
}
.winning-message.show{
  display: flex
}
